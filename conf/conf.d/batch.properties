
###############################################################################
## Batch Control Configuration                                               ##
###############################################################################

# Batch download directory. Directory to download uploaded instruction 
# files to. If this is left blank, the system default temporary
# directory is used.
# Batch_Download_Dir <String>
# Batch_Download_Dir /tmp
Batch_Download_Dir 

# Batch timeout in seconds. Time to wait at batch startup before failing 
# batch control, if the batch process has not started. The default is 60
# seconds.
# Batch_Timeout <int>
# Batch_Timeout 60
Batch_Timeout 60

# Batch termination timeout in seconds. Time to wait before returning a 
# batch termination success or failure result.  The default is 10 seconds.
# Batch_Termination_TimeOut <int>
# Batch_Termination_TimeOut 10
Batch_Termination_TimeOut 10

# Batch process working directory. If this is is set to null, the working
# directory is taken to be the System temporary directory. The default is
# null.
# Batch_Working_Dir [<Path>|null]
# Batch_Working_Dir /var/rigclient/batch
Batch_Working_Dir null

# Don't create a nested working directory. If this is set to true, a new 
# directory is created in the batch working directory and the batch 
# processes working directory is set as the new directory. The default is 
# true.
# Batch_Created_Nested_Dir [true|false]
# Batch_Created_Nested_Dir true
Batch_Create_Nested_Dir true

# Batch clean up. If this is set to true, the batch control invocation generated
# files are deleted. This setting is only honoured if the property
# Batch_Create_Nester_Dir property is set to true. If not, it is 
# ignored and no clean up occurs. The default is false.
# Batch_Clean_Up [true|false]
# Batch_Clean_Up false
Batch_Clean_Up false

# Specifies if the batch process should inherit the environment variables. If
# true, no inherited environment variables will be given to the batch process
# unless they are set up manually. The default value is false.
# Batch_Flush_Env [true|false]
# Batch_Flush_Env false
Batch_Flush_Env false

# Specifies if the uploaded instruction should be deleted upon completion of 
# batch execution. If true, the uploaded batch instruction file is deleted.
# The default value is true.
# Batch_Instruct_File_Delete [true|false]
# Batch_Instruct_File_Delete true
Batch_Instruct_File_Delete false

###############################################################################
## Configured Batch Runner                                                   ##
###############################################################################

###############################################################################
# Macros - these can be used to inject run-time variables into configuration, #
#          when the macro string is entered into the property value string,   #
#          the run-time value is substituted where the macro is placed. They  #
#          may be used in configuration variables where noted.                #
#                                                                             #
# Macro list:                                                                 #
#   * __FILE__ - The absolute path of the uploaded instruction file.          #
#   * __USER__ - The user name of the user who initiated batch control.       #
#   * __DAY_OF_MONTH__ - Current day of the month in two digit numerical      #
#                        format with leading zeros.                           #
#   * __MONTH__ - Current month in the year in two digit numerical format     #
#                 with leading zeros.                                         #
#   * __YEAR__ - ISO-8601 year number.                                        #
#   * __HOUR__ - 24-hour format of an hour with leading zeros.                #
#   * __MINUTE__ - Minutes with leading zeros.                                #
#   * __SECOND__ - Seconds with leading zeros.                                #
#   * __ISO8601__ - ISO 8601 formatted date.                                  #
#   * __EPOCH__ - Seconds since the Unix Epoch (Jan 1 1970 00:00:00 GMT)      #
#                                                                             #
# NOTE: The macro name is prefixed and suffixed with two underscores.         #
###############################################################################

###############################################################################
# Rig Client configured batch runner properties configuration file.           #
# Format of each item is:                                                     #
#     # <Description> A description of the configuration item.                #
#     # <Name> <Type> Configuration key - Configuration value type            #
#     # <Example> Provided example of correct configuration                   #
#     Key <Value> Actual configuration                                        #
#                                                                             #
# NOTE: Key values and enumerated values ARE case sensitive.                  #
###############################################################################

###############################################################################
## Batch Process Configuration.                                              ##
###############################################################################

# Batch executable. This should be an absolute reference to the batch 
# executable that should be invoked for batch control 
# (i.e. '/bin/ls' instead of 'ls').
# Batch_Exec <String>
# Batch_Exec /bin/false
Batch_Exec /bin/false

# Arguments to provide to the batch executable in order of 1 to n. As many
# arguments as needed may be configured provided they follow the format
# 'Exec_Arg_<Integer>'. The Exec_Arg_ integers must be correctly sequenced,
# missing a number will cause subsequent argument configuration to not be
# loaded. The arguments are provided to the batch command in the order they
# are sequenced. Macros may be used as values. To provide the file as
# a command line argument use the __FILE__ marco.
# Batch_Exec_Arg_<Integer> [<String>|<Macro>] 
# Batch_Exec_Arg_1 __FILE__
Batch_Exec_Arg_1 Arg1
Batch_Exec_Arg_2 Arg2

# Environment variables to provide for the batch executable process. As may
# environment variables as needed may be configured provided they follow
# the format 'Env_<Integer>' with the configuration value as environment 
# '<Key>:<Value>'. The Env integers must be correctly sequenced, missing a 
# number will cause subsequent environment variable configuration to not be
# loaded. Macros be use using as the value portion of the environment variable.
# Batch_Env_<Integer> <String>:[<String>|<Macro>]
# Batch_Env_1 Key:Value 
Batch_Env_1 Env:Val
Batch_Env_2 Env2:Val2

###############################################################################
## Instruction File Sanity Checks                                            ##
###############################################################################
#
# Instruction file sanity checks ensure the uploaded instruction is 
# applicable to what the batch process may run. The configured batch runner 
# contains three such file sanity tests which may be run:
#
#     * File extension - if the uploaded file extension matches the configured
#               file extension
#     * File magic number - if the uploaded file magic number (a value in up to
#               the first eight bytes) matches the configured magic number.
#     * File maximum size - if the uploaded file size is less than the 
#               configured maximum file size.
#

# Whether to test the instruction file extension. If this is set to true,
# File_Extension property must be set. The default value is false to specify
# not to test a file extension.
# Batch_Test_File_Extension [true|false]
# Batch_Test_File_Extension true
Batch_Test_File_Extension true

# Instruction file extension. Should be configured as a string specified the
# characters of the file extension. The file extension test will check if the 
# instruction file name ends with the configured extension.
# Batch_File_Extension <String>
# Batch_File_Extension tar.gz
Batch_File_Extension .tar.gz

# Whether to test for instruction file maximum size. If this is set to true,
# the File_Size property must be set with the maximum permissible instruction
# file size. The default value is false to specify not to test for file 
# size.
# Batch_Test_Max_File_Size [true|false]
# Batch_Test_Max_File_Size true
Batch_Test_Max_File_Size true

# Maximum file size of the instruction file in kilobytes.
# Max_File_Size <int>
# Max_File_Size 1024
Batch_Max_File_Size 1024

# Whether to test the instruction file for magic number. From the oracle of 
# all knowledge (Wikipedia!), magic numbers are common in programs across many
# operating systems. Magic numbers implement strongly typed data and are a form
# of in-band signalling to the controlling program that reads the data type(s)
# at program run-time. Many files have such constants that identify the 
# contained data. Detecting such constants in files is a simple and effective 
# way of distinguishing between many file formats and can yield further run-time 
# information.
# If this is set top true, the File_Magic_Number property must be set with a
# hexadecimal representation of the file magic number. The default value is
# false to specify not to test for file magic number.
# Batch_Test_Magic_Number [true|false]
# Batch_Test_Magic_Number true
Batch_Test_Magic_Number true

# File magic number in hexadecimal format. The prefix '0x' is optional.
# Batch_File_Magic_Number <hex>
# Batch_File_Magic_Number 0xCAFEBABE
Batch_File_Magic_Number 0xCAFEBABE

###############################################################################
## File Synchronisation                                                      ##
###############################################################################
#
# File synchronisation runs after completion of the batch process and may be 
# configured to store the generated results files that are in the batch
# process working directory. The file may be stored in a compressed Zip archive
# or a configured directory. 
#

# Whether to synchronise the results directory (batch process working directory
# to the another directory. If true, the results directory is copied to a
# different directory. If true the Sync_Dir_Destination property and 
# the Sync_Dir_Name property must be set with the results destination path name
# and result directory name respectively. The default is false.
# Batch_Sync_Results_Dir [true|false]
# Batch_Sync_Results_Dir false
Batch_Sync_Results_Dir false

# The absolute path name to the directory to store the results file / 
# directory. Macro variables may be used as path elements. This 
# directory must exist for storing results to succeed.
# Batch_Sync_Dir_Destination <path name>
# Batch_Sync_Dir_Destination /var/rigclient/__YEAR__/
Batch_Sync_Dir_Destination /tmp

# The name of either the results directory or results file depending on the 
# Compress_Dir setting. If Compress_Dir is true, this is used as the file 
# name and a suitable file extension is appended to the name.
# Batch_Sync_Dir_Name <string>
# Batch_Sync_Dir_Name __ISO8601__  
Batch_Sync_Dir_Name __USER__

# Whether to compress the results directory into a zip archive. The default
# false to not compress the results directory.
# Batch_Compress_Dir [true|false]
# Batch_Compress_Dir false
Batch_Compress_Dir false

# The compression level of the results file. This may be one of the following
# compression levels:
#     * BEST - Best compression
#     * DEFAULT - Default compression
#     * FASTEST - Fastest compression
# The default compression level is 'DEFAULT'.
# Batch_Compression_Level [BEST|DEFAULT|FASTEST]
# Batch_Compression_Level DEFAULT
Batch_Compression_Level DEFAULT

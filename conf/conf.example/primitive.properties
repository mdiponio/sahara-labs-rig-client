#
# SAHARA Rig Client
#
# Software abstraction of physical rig to provide rig session control
# and rig device control. Automatically tests rig hardware and reports
# the rig status to ensure rig goodness.
#
# @license See LICENSE in the top level directory for complete license terms.
#
# Copyright (c) 2009 - 2010, University of Technology, Sydney
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
#  * Redistributions of source code must retain the above copyright notice,
#    this list of conditions and the following disclaimer.
#  * Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#  * Neither the name of the University of Technology, Sydney nor the names
#    of its contributors may be used to endorse or promote products derived from
#    this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# @author Michael Diponio (mdiponio)
# @author Michael Diponio (mdiponio)
# @author Tania Machet    (tmachet)
# @author Tejaswini Deshpande (tdeshpan)
# @date 6th October 2010
#

###############################################################################
## Primitive Control Configuration                                           ##
###############################################################################

# The list of package names that are used in primitive controller class resolution.
# Class resolution works using the following algorithm:
#
#   1. The specified controller class name is assumed to be a fully qualified
#      class name and an attempt is made to load it. If it is found then that class
#      is used;
#   2. The specified controller class name is appended to the first configured
#      primitive package and an attempt is made to load it. If it is found then that
#      class is used;
#   3. The specified controller class name is appended to the next configured
#      primitive package and an attempt is made to load it. If it is found then
#      that class is used. This occurs until either the class is found or
#      all the configured primitive packages are tried;
#
# Multiple primitive package prefixes can be configured using the ';' character as
# the delimiter between packages.
# Package_Prefixes <package.1>;<package.2>;<package.3>
# Package_Prefixes au.edu.labshare.rigclient.primitive;au.edu.rmit.labshare
Package_Prefixes au.edu.labshare.rigclient.primitive


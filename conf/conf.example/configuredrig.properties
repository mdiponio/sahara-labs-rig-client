###############################################################################
## Configured Rig Type Configuration (ConfiguredRig|ConfiguredControllerRig) ##
###############################################################################

# A configured rig determines required action instances from configuration.
# For descriptions of actions class types and details on how to implement them,
# please consult the 'Sahara Development Handbook'.

# The list of package names that are used in action class resolution. Class
# resolution works using the following algorithm:
#
#    1. The configured action class name is assumed to be a fully
#       qualified class name and an attempt is made to load it. If it
#       is found then that class is used;
#    2. The configured action class name is appended to the first configured
#       action package prefix and an attempt is made to load it. If it is found
#       then that class is used;
#    3. The configured action class name is appended to the next configured
#       action package prefix and an attempt is made to load it. If it is found
#       then that class is used. This occurs until either the class is found or
#       all the configured action package prefixes are tried;
#
# Multiple action package prefixes can be configured using the ';' character
# as the delimiter between packages.
# Package_Prefixes <package.1>;<package.2>;<package.3>
# Package_Prefixes au.edu.uts.eng.remotelabs.rigclient.action
Action_Package_Prefixes au.edu.labshare.rigclient

# Access actions assign access and revoke access to and from the assigned master
# user and run at the beginning and end of sessions. This configures list of access 
# actions to load. Multiple access actions can be configured, separating each with
# a ';' character. When multiple access actions are configured, the assignment
# methods are invoked in order they are configured and the revocation methods
# are invoked in reverse order they are configured.
# Access_Actions <Class>;...;<Class>
# Access_Actions access.RemoteDesktopAccessAction
Access_Actions 

# Slave access actions assign and revoke access for secondary session users.
# This configures the list of slave access actions to load. Multiple slave
# access actions can be configured, separating each with a ';' character.
# When multiple slave access actions are configured, the slave assignment
# methods are invoked in the order they are configured and the slave
# revocation methods are invoked in the reverse order they are configured.
# Slave_Access_Actions <Class>;...;<Class>
# Slave_Access_Actions VNCSlaveAccessAction
Slave_Access_Actions 

# Notify actions provide notifications to users of session event messages
# and are useful if the users focus may not be on the web interface. For
# example providing a Windows popup when a users focus is on using Remote
# Desktop.  This configures the list of notification actions to load.
#  Multiple notification actions can be configured, separating each
# with a ';' character.
# Notify_Actions <Class>;...<Class>
# Notify_Actions notify.WindowsMsgNotifyAction
Notify_Actions 

# Detection actions are used to verify a user is actually using a rig
# when in  session. If they are not, they are removed from the rig
# after a permission configured timeout period. This configures the list
# of detection actions to  load. Multiple detection actions can be
# configured, separating each  with a ';' character.
# Detection_Actions <Class>;...;<Class>
# Detection_Actions detect.RDPActivityDetectorAction
Detection_Actions 

# Reset actions are run at the end of sessions to cleanup the rig to be
# ready for the next user. This configures the list of reset actions to
# load. Multiple reset actions can be configured, separating each with
# a ';' character.
# Reset_Actions <Class>;...;<Class>
# Reset_Actions PowerCycleResetAction
Reset_Actions 

# Test actions are used to ensure the rig is ready for use by running
# tests on the system when it is free. These tests report the rig status
# and if  one of the tests fail, the rig is taken offline. This configures
#the list of test actions to load. Multiple test actions can be configured,
# separating each with a ';' character.
# Test_Actions <Class>;...;<Class>
# Test_Actions test.PingTestAction
Test_Actions 
